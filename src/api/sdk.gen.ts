// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetApiArtifactsIdGetData, GetApiArtifactsIdGetResponses, GetApiArtifactsIdGetErrors, GetApiExecutionsIdDetailsGetData, GetApiExecutionsIdDetailsGetResponses, GetApiExecutionsIdDetailsGetErrors, GetGraphExecutionStateApiExecutionsIdStateGetData, GetGraphExecutionStateApiExecutionsIdStateGetResponses, GetGraphExecutionStateApiExecutionsIdStateGetErrors, GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetData, GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses, GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors, GetContainerExecutionStateApiExecutionsIdContainerStateGetData, GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses, GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors, GetArtifactsApiExecutionsIdArtifactsGetData, GetArtifactsApiExecutionsIdArtifactsGetResponses, GetArtifactsApiExecutionsIdArtifactsGetErrors, GetContainerLogApiExecutionsIdContainerLogGetData, GetContainerLogApiExecutionsIdContainerLogGetResponses, GetContainerLogApiExecutionsIdContainerLogGetErrors, StreamContainerLogApiExecutionsIdStreamContainerLogGetData, StreamContainerLogApiExecutionsIdStreamContainerLogGetResponses, StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors, ListApiPipelineRunsGetData, ListApiPipelineRunsGetResponses, ListApiPipelineRunsGetErrors, CreateApiPipelineRunsPostData, CreateApiPipelineRunsPostResponses, CreateApiPipelineRunsPostErrors, GetApiPipelineRunsIdGetData, GetApiPipelineRunsIdGetResponses, GetApiPipelineRunsIdGetErrors, GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetData, GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses, GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors, PipelineRunCancelApiPipelineRunsIdCancelPostData, PipelineRunCancelApiPipelineRunsIdCancelPostResponses, PipelineRunCancelApiPipelineRunsIdCancelPostErrors, ListAnnotationsApiPipelineRunsIdAnnotationsGetData, ListAnnotationsApiPipelineRunsIdAnnotationsGetResponses, ListAnnotationsApiPipelineRunsIdAnnotationsGetErrors, DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteData, DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteResponses, DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteErrors, SetAnnotationApiPipelineRunsIdAnnotationsKeyPutData, SetAnnotationApiPipelineRunsIdAnnotationsKeyPutResponses, SetAnnotationApiPipelineRunsIdAnnotationsKeyPutErrors, GetCurrentUserApiUsersMeGetData, GetCurrentUserApiUsersMeGetResponses, GetApiComponentsDigestGetData, GetApiComponentsDigestGetResponses, GetApiComponentsDigestGetErrors, ListApiPublishedComponentsGetData, ListApiPublishedComponentsGetResponses, ListApiPublishedComponentsGetErrors, PublishApiPublishedComponentsPostData, PublishApiPublishedComponentsPostResponses, PublishApiPublishedComponentsPostErrors, UpdateApiPublishedComponentsDigestPutData, UpdateApiPublishedComponentsDigestPutResponses, UpdateApiPublishedComponentsDigestPutErrors, ListApiComponentLibrariesGetData, ListApiComponentLibrariesGetResponses, ListApiComponentLibrariesGetErrors, CreateApiComponentLibrariesPostData, CreateApiComponentLibrariesPostResponses, CreateApiComponentLibrariesPostErrors, GetApiComponentLibrariesIdGetData, GetApiComponentLibrariesIdGetResponses, GetApiComponentLibrariesIdGetErrors, ReplaceApiComponentLibrariesIdPutData, ReplaceApiComponentLibrariesIdPutResponses, ReplaceApiComponentLibrariesIdPutErrors, GetComponentLibraryPinsApiComponentLibraryPinsMeGetData, GetComponentLibraryPinsApiComponentLibraryPinsMeGetResponses, SetComponentLibraryPinsApiComponentLibraryPinsMePutData, SetComponentLibraryPinsApiComponentLibraryPinsMePutResponses, SetComponentLibraryPinsApiComponentLibraryPinsMePutErrors, AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutData, AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutResponses, AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors, AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutData, AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutResponses, AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors, GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetData, GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetResponses, PingServicesPingGetData, PingServicesPingGetResponses, GetUserNamesGetUserNamesGetData, GetUserNamesGetUserNamesGetResponses, TestGetUserDetailsApiTestGetUserDetailsGetData, TestGetUserDetailsApiTestGetUserDetailsGetResponses, GetRequestHeadersApiTestGetRequestHeadersGetData, GetRequestHeadersApiTestGetRequestHeadersGetResponses, ReadUrlTestReadUrlGetData, ReadUrlTestReadUrlGetResponses, ReadUrlTestReadUrlGetErrors, GcsReadGcsReadGetData, GcsReadGcsReadGetResponses, GcsReadGcsReadGetErrors, GkeGetClusterConfigGkeGetClusterConfigGetData, GkeGetClusterConfigGkeGetClusterConfigGetResponses, GkeGetClusterConfigGkeGetClusterConfigGetErrors, GkeListNamespacesGkeListNamespacesGetData, GkeListNamespacesGkeListNamespacesGetResponses, GkeListNamespacesGkeListNamespacesGetErrors, GetMysqlUrlGetMysqlUrlGetData, GetMysqlUrlGetMysqlUrlGetResponses, MysqlListTablesMysqlListTablesGetData, MysqlListTablesMysqlListTablesGetResponses, MysqlListTablesMysqlListTablesGetErrors, MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostData, MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses, MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors, VertexListCustomJobsVertexListCustomJobsGetData, VertexListCustomJobsVertexListCustomJobsGetResponses, VertexListCustomJobsVertexListCustomJobsGetErrors, GkeCreateSimplePodTestGkeCreateSimplePodGetData, GkeCreateSimplePodTestGkeCreateSimplePodGetResponses, GkeCreateSimplePodTestGkeCreateSimplePodGetErrors, GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetData, GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses, GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors, QuickStatsApiStatsQuickGetData, QuickStatsApiStatsQuickGetResponses, QuickStatsApiStatsQuickGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get
 */
export const getApiArtifactsIdGet = <ThrowOnError extends boolean = false>(options: Options<GetApiArtifactsIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiArtifactsIdGetResponses, GetApiArtifactsIdGetErrors, ThrowOnError>({
        url: '/api/artifacts/{id}',
        ...options
    });
};

/**
 * Get
 */
export const getApiExecutionsIdDetailsGet = <ThrowOnError extends boolean = false>(options: Options<GetApiExecutionsIdDetailsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiExecutionsIdDetailsGetResponses, GetApiExecutionsIdDetailsGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/details',
        ...options
    });
};

/**
 * Get Graph Execution State
 */
export const getGraphExecutionStateApiExecutionsIdStateGet = <ThrowOnError extends boolean = false>(options: Options<GetGraphExecutionStateApiExecutionsIdStateGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetGraphExecutionStateApiExecutionsIdStateGetResponses, GetGraphExecutionStateApiExecutionsIdStateGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/state',
        ...options
    });
};

/**
 * Get Graph Execution State
 */
export const getGraphExecutionStateApiExecutionsIdGraphExecutionStateGet = <ThrowOnError extends boolean = false>(options: Options<GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses, GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/graph_execution_state',
        ...options
    });
};

/**
 * Get Container Execution State
 */
export const getContainerExecutionStateApiExecutionsIdContainerStateGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerExecutionStateApiExecutionsIdContainerStateGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses, GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/container_state',
        ...options
    });
};

/**
 * Get Artifacts
 */
export const getArtifactsApiExecutionsIdArtifactsGet = <ThrowOnError extends boolean = false>(options: Options<GetArtifactsApiExecutionsIdArtifactsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetArtifactsApiExecutionsIdArtifactsGetResponses, GetArtifactsApiExecutionsIdArtifactsGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/artifacts',
        ...options
    });
};

/**
 * Get Container Log
 */
export const getContainerLogApiExecutionsIdContainerLogGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerLogApiExecutionsIdContainerLogGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerLogApiExecutionsIdContainerLogGetResponses, GetContainerLogApiExecutionsIdContainerLogGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/container_log',
        ...options
    });
};

/**
 * Stream Container Log
 */
export const streamContainerLogApiExecutionsIdStreamContainerLogGet = <ThrowOnError extends boolean = false>(options: Options<StreamContainerLogApiExecutionsIdStreamContainerLogGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<StreamContainerLogApiExecutionsIdStreamContainerLogGetResponses, StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors, ThrowOnError>({
        url: '/api/executions/{id}/stream_container_log',
        ...options
    });
};

/**
 * List
 */
export const listApiPipelineRunsGet = <ThrowOnError extends boolean = false>(options?: Options<ListApiPipelineRunsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListApiPipelineRunsGetResponses, ListApiPipelineRunsGetErrors, ThrowOnError>({
        url: '/api/pipeline_runs/',
        ...options
    });
};

/**
 * Create
 */
export const createApiPipelineRunsPost = <ThrowOnError extends boolean = false>(options: Options<CreateApiPipelineRunsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateApiPipelineRunsPostResponses, CreateApiPipelineRunsPostErrors, ThrowOnError>({
        url: '/api/pipeline_runs/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get
 */
export const getApiPipelineRunsIdGet = <ThrowOnError extends boolean = false>(options: Options<GetApiPipelineRunsIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiPipelineRunsIdGetResponses, GetApiPipelineRunsIdGetErrors, ThrowOnError>({
        url: '/api/pipeline_runs/{id}',
        ...options
    });
};

/**
 * Get Signed Artifact Url
 */
export const getSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGet = <ThrowOnError extends boolean = false>(options: Options<GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses, GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors, ThrowOnError>({
        url: '/api/artifacts/{id}/signed_artifact_url',
        ...options
    });
};

/**
 * Pipeline Run Cancel
 */
export const pipelineRunCancelApiPipelineRunsIdCancelPost = <ThrowOnError extends boolean = false>(options: Options<PipelineRunCancelApiPipelineRunsIdCancelPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PipelineRunCancelApiPipelineRunsIdCancelPostResponses, PipelineRunCancelApiPipelineRunsIdCancelPostErrors, ThrowOnError>({
        url: '/api/pipeline_runs/{id}/cancel',
        ...options
    });
};

/**
 * List Annotations
 */
export const listAnnotationsApiPipelineRunsIdAnnotationsGet = <ThrowOnError extends boolean = false>(options: Options<ListAnnotationsApiPipelineRunsIdAnnotationsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListAnnotationsApiPipelineRunsIdAnnotationsGetResponses, ListAnnotationsApiPipelineRunsIdAnnotationsGetErrors, ThrowOnError>({
        url: '/api/pipeline_runs/{id}/annotations/',
        ...options
    });
};

/**
 * Delete Annotation
 */
export const deleteAnnotationApiPipelineRunsIdAnnotationsKeyDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteResponses, DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteErrors, ThrowOnError>({
        url: '/api/pipeline_runs/{id}/annotations/{key}',
        ...options
    });
};

/**
 * Set Annotation
 */
export const setAnnotationApiPipelineRunsIdAnnotationsKeyPut = <ThrowOnError extends boolean = false>(options: Options<SetAnnotationApiPipelineRunsIdAnnotationsKeyPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SetAnnotationApiPipelineRunsIdAnnotationsKeyPutResponses, SetAnnotationApiPipelineRunsIdAnnotationsKeyPutErrors, ThrowOnError>({
        url: '/api/pipeline_runs/{id}/annotations/{key}',
        ...options
    });
};

/**
 * Get Current User
 */
export const getCurrentUserApiUsersMeGet = <ThrowOnError extends boolean = false>(options?: Options<GetCurrentUserApiUsersMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCurrentUserApiUsersMeGetResponses, unknown, ThrowOnError>({
        url: '/api/users/me',
        ...options
    });
};

/**
 * Get
 */
export const getApiComponentsDigestGet = <ThrowOnError extends boolean = false>(options: Options<GetApiComponentsDigestGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiComponentsDigestGetResponses, GetApiComponentsDigestGetErrors, ThrowOnError>({
        url: '/api/components/{digest}',
        ...options
    });
};

/**
 * List
 */
export const listApiPublishedComponentsGet = <ThrowOnError extends boolean = false>(options?: Options<ListApiPublishedComponentsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListApiPublishedComponentsGetResponses, ListApiPublishedComponentsGetErrors, ThrowOnError>({
        url: '/api/published_components/',
        ...options
    });
};

/**
 * Publish
 */
export const publishApiPublishedComponentsPost = <ThrowOnError extends boolean = false>(options: Options<PublishApiPublishedComponentsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PublishApiPublishedComponentsPostResponses, PublishApiPublishedComponentsPostErrors, ThrowOnError>({
        url: '/api/published_components/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update
 */
export const updateApiPublishedComponentsDigestPut = <ThrowOnError extends boolean = false>(options: Options<UpdateApiPublishedComponentsDigestPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateApiPublishedComponentsDigestPutResponses, UpdateApiPublishedComponentsDigestPutErrors, ThrowOnError>({
        url: '/api/published_components/{digest}',
        ...options
    });
};

/**
 * List
 */
export const listApiComponentLibrariesGet = <ThrowOnError extends boolean = false>(options?: Options<ListApiComponentLibrariesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListApiComponentLibrariesGetResponses, ListApiComponentLibrariesGetErrors, ThrowOnError>({
        url: '/api/component_libraries/',
        ...options
    });
};

/**
 * Create
 */
export const createApiComponentLibrariesPost = <ThrowOnError extends boolean = false>(options: Options<CreateApiComponentLibrariesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateApiComponentLibrariesPostResponses, CreateApiComponentLibrariesPostErrors, ThrowOnError>({
        url: '/api/component_libraries/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get
 */
export const getApiComponentLibrariesIdGet = <ThrowOnError extends boolean = false>(options: Options<GetApiComponentLibrariesIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiComponentLibrariesIdGetResponses, GetApiComponentLibrariesIdGetErrors, ThrowOnError>({
        url: '/api/component_libraries/{id}',
        ...options
    });
};

/**
 * Replace
 */
export const replaceApiComponentLibrariesIdPut = <ThrowOnError extends boolean = false>(options: Options<ReplaceApiComponentLibrariesIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<ReplaceApiComponentLibrariesIdPutResponses, ReplaceApiComponentLibrariesIdPutErrors, ThrowOnError>({
        url: '/api/component_libraries/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Component Library Pins
 */
export const getComponentLibraryPinsApiComponentLibraryPinsMeGet = <ThrowOnError extends boolean = false>(options?: Options<GetComponentLibraryPinsApiComponentLibraryPinsMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetComponentLibraryPinsApiComponentLibraryPinsMeGetResponses, unknown, ThrowOnError>({
        url: '/api/component_library_pins/me/',
        ...options
    });
};

/**
 * Set Component Library Pins
 */
export const setComponentLibraryPinsApiComponentLibraryPinsMePut = <ThrowOnError extends boolean = false>(options: Options<SetComponentLibraryPinsApiComponentLibraryPinsMePutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SetComponentLibraryPinsApiComponentLibraryPinsMePutResponses, SetComponentLibraryPinsApiComponentLibraryPinsMePutErrors, ThrowOnError>({
        url: '/api/component_library_pins/me/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Admin Set Read Only Model
 */
export const adminSetReadOnlyModelApiAdminSetReadOnlyModelPut = <ThrowOnError extends boolean = false>(options: Options<AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutResponses, AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors, ThrowOnError>({
        url: '/api/admin/set_read_only_model',
        ...options
    });
};

/**
 * Admin Set Execution Node Status
 */
export const adminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPut = <ThrowOnError extends boolean = false>(options: Options<AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutResponses, AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors, ThrowOnError>({
        url: '/api/admin/execution_node/{id}/status',
        ...options
    });
};

/**
 * Get Sql Engine Connection Pool Status
 */
export const getSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGet = <ThrowOnError extends boolean = false>(options?: Options<GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetResponses, unknown, ThrowOnError>({
        url: '/api/admin/sql_engine_connection_pool_status',
        ...options
    });
};

/**
 * Ping
 */
export const pingServicesPingGet = <ThrowOnError extends boolean = false>(options?: Options<PingServicesPingGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<PingServicesPingGetResponses, unknown, ThrowOnError>({
        url: '/services/ping',
        ...options
    });
};

/**
 * Get User Names
 */
export const getUserNamesGetUserNamesGet = <ThrowOnError extends boolean = false>(options?: Options<GetUserNamesGetUserNamesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserNamesGetUserNamesGetResponses, unknown, ThrowOnError>({
        url: '/get_user_names',
        ...options
    });
};

/**
 * Test Get User Details
 */
export const testGetUserDetailsApiTestGetUserDetailsGet = <ThrowOnError extends boolean = false>(options?: Options<TestGetUserDetailsApiTestGetUserDetailsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<TestGetUserDetailsApiTestGetUserDetailsGetResponses, unknown, ThrowOnError>({
        url: '/api/test/get_user_details',
        ...options
    });
};

/**
 * Get Request Headers
 */
export const getRequestHeadersApiTestGetRequestHeadersGet = <ThrowOnError extends boolean = false>(options?: Options<GetRequestHeadersApiTestGetRequestHeadersGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetRequestHeadersApiTestGetRequestHeadersGetResponses, unknown, ThrowOnError>({
        url: '/api/test/get_request_headers',
        ...options
    });
};

/**
 * Read Url
 */
export const readUrlTestReadUrlGet = <ThrowOnError extends boolean = false>(options: Options<ReadUrlTestReadUrlGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ReadUrlTestReadUrlGetResponses, ReadUrlTestReadUrlGetErrors, ThrowOnError>({
        url: '/test/read_url',
        ...options
    });
};

/**
 * Gcs Read
 */
export const gcsReadGcsReadGet = <ThrowOnError extends boolean = false>(options?: Options<GcsReadGcsReadGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GcsReadGcsReadGetResponses, GcsReadGcsReadGetErrors, ThrowOnError>({
        url: '/gcs_read',
        ...options
    });
};

/**
 * Gke Get Cluster Config
 */
export const gkeGetClusterConfigGkeGetClusterConfigGet = <ThrowOnError extends boolean = false>(options?: Options<GkeGetClusterConfigGkeGetClusterConfigGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GkeGetClusterConfigGkeGetClusterConfigGetResponses, GkeGetClusterConfigGkeGetClusterConfigGetErrors, ThrowOnError>({
        url: '/gke_get_cluster_config',
        ...options
    });
};

/**
 * Gke List Namespaces
 */
export const gkeListNamespacesGkeListNamespacesGet = <ThrowOnError extends boolean = false>(options?: Options<GkeListNamespacesGkeListNamespacesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GkeListNamespacesGkeListNamespacesGetResponses, GkeListNamespacesGkeListNamespacesGetErrors, ThrowOnError>({
        url: '/gke_list_namespaces',
        ...options
    });
};

/**
 * Get Mysql Url
 */
export const getMysqlUrlGetMysqlUrlGet = <ThrowOnError extends boolean = false>(options?: Options<GetMysqlUrlGetMysqlUrlGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMysqlUrlGetMysqlUrlGetResponses, unknown, ThrowOnError>({
        url: '/get_mysql_url',
        ...options
    });
};

/**
 * Mysql List Tables
 */
export const mysqlListTablesMysqlListTablesGet = <ThrowOnError extends boolean = false>(options?: Options<MysqlListTablesMysqlListTablesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<MysqlListTablesMysqlListTablesGetResponses, MysqlListTablesMysqlListTablesGetErrors, ThrowOnError>({
        url: '/mysql_list_tables',
        ...options
    });
};

/**
 * Mysql Recreate All Tables Dont Run
 */
export const mysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPost = <ThrowOnError extends boolean = false>(options: Options<MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses, MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors, ThrowOnError>({
        url: '/admin/mysql_recreate_all_tables_dont_run',
        ...options
    });
};

/**
 * Vertex List Custom Jobs
 */
export const vertexListCustomJobsVertexListCustomJobsGet = <ThrowOnError extends boolean = false>(options?: Options<VertexListCustomJobsVertexListCustomJobsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<VertexListCustomJobsVertexListCustomJobsGetResponses, VertexListCustomJobsVertexListCustomJobsGetErrors, ThrowOnError>({
        url: '/vertex_list_custom_jobs',
        ...options
    });
};

/**
 * Gke Create Simple Pod
 */
export const gkeCreateSimplePodTestGkeCreateSimplePodGet = <ThrowOnError extends boolean = false>(options?: Options<GkeCreateSimplePodTestGkeCreateSimplePodGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GkeCreateSimplePodTestGkeCreateSimplePodGetResponses, GkeCreateSimplePodTestGkeCreateSimplePodGetErrors, ThrowOnError>({
        url: '/test/gke_create_simple_pod',
        ...options
    });
};

/**
 * Gke Create Gcsfuse Pod
 */
export const gkeCreateGcsfusePodTestGkeCreateGcsfusePodGet = <ThrowOnError extends boolean = false>(options?: Options<GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses, GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors, ThrowOnError>({
        url: '/test/gke_create_gcsfuse_pod',
        ...options
    });
};

/**
 * Quick Stats
 * Display pipeline statistics dashboard or return raw JSON data based on format parameter.
 *
 * Shows runs and unique users over the last 30 days.
 * Supports both HTML dashboard (default) and JSON data formats.
 *
 * Args:
 * format: Response format - 'html' for dashboard view, 'json' for raw data
 *
 * Requires user authentication. Data is cached for 15 minutes to improve performance.
 */
export const quickStatsApiStatsQuickGet = <ThrowOnError extends boolean = false>(options?: Options<QuickStatsApiStatsQuickGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<QuickStatsApiStatsQuickGetResponses, QuickStatsApiStatsQuickGetErrors, ThrowOnError>({
        url: '/api/stats/quick',
        ...options
    });
};