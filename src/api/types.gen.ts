// This file is auto-generated by @hey-api/openapi-ts

export type ArtifactData = {
    total_size: number;
    is_dir: boolean;
    hash: string;
    uri?: string | null;
    value?: string | null;
    created_at?: string | null;
    deleted_at?: string | null;
    extra_data?: {
        [key: string]: unknown;
    } | null;
};

export type ArtifactDataResponse = {
    total_size: number;
    is_dir: boolean;
    uri?: string | null;
    value?: string | null;
};

export type ArtifactNodeIdResponse = {
    id: string;
};

export type ArtifactNodeResponse = {
    id: string;
    type_name?: string | null;
    type_properties?: {
        [key: string]: unknown;
    } | null;
    producer_execution_id?: string | null;
    producer_output_name?: string | null;
    artifact_data?: ArtifactDataResponse | null;
};

export type BodyCreateApiPipelineRunsPost = {
    root_task: TaskSpecInput;
    components?: Array<ComponentReferenceInput> | null;
    annotations?: {
        [key: string]: unknown;
    } | null;
};

export type CachingStrategySpec = {
    maxCacheStaleness?: string | null;
};

export type ComponentReferenceInput = {
    name?: string | null;
    digest?: string | null;
    tag?: string | null;
    url?: string | null;
    spec?: ComponentSpecInput | null;
    text?: string | null;
};

export type ComponentReferenceOutput = {
    name?: string | null;
    digest?: string | null;
    tag?: string | null;
    url?: string | null;
    spec?: ComponentSpecOutput | null;
    text?: string | null;
};

export type ComponentSpecInput = {
    name?: string | null;
    description?: string | null;
    metadata?: MetadataSpec | null;
    inputs?: Array<InputSpec> | null;
    outputs?: Array<OutputSpec> | null;
    implementation?: ContainerImplementationInput | GraphImplementationInput | null;
};

export type ComponentSpecOutput = {
    name?: string | null;
    description?: string | null;
    metadata?: MetadataSpec | null;
    inputs?: Array<InputSpec> | null;
    outputs?: Array<OutputSpec> | null;
    implementation?: ContainerImplementationOutput | GraphImplementationOutput | null;
};

export type ConcatPlaceholderInput = {
    concat: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput>;
};

export type ConcatPlaceholderOutput = {
    concat: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput>;
};

export type ContainerExecutionStatus = 'INVALID' | 'UNINITIALIZED' | 'QUEUED' | 'WAITING_FOR_UPSTREAM' | 'PENDING' | 'RUNNING' | 'SUCCEEDED' | 'FAILED' | 'SYSTEM_ERROR' | 'CANCELLING' | 'CANCELLED' | 'SKIPPED';

export type ContainerImplementationInput = {
    container: ContainerSpecInput;
};

export type ContainerImplementationOutput = {
    container: ContainerSpecOutput;
};

export type ContainerSpecInput = {
    image: string;
    command?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput> | null;
    args?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput> | null;
    env?: {
        [key: string]: string;
    } | null;
};

export type ContainerSpecOutput = {
    image: string;
    command?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput> | null;
    args?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput> | null;
    env?: {
        [key: string]: string;
    } | null;
};

export type ExecutionOptionsSpec = {
    retryStrategy?: RetryStrategySpec | null;
    cachingStrategy?: CachingStrategySpec | null;
};

export type GetArtifactInfoResponse = {
    id: string;
    artifact_data?: ArtifactData | null;
};

export type GetArtifactSignedUrlResponse = {
    signed_url: string;
};

export type GetContainerExecutionLogResponse = {
    log_text?: string | null;
    system_error_exception_full?: string | null;
    orchestration_error_message?: string | null;
};

export type GetContainerExecutionStateResponse = {
    status: ContainerExecutionStatus;
    exit_code?: number | null;
    started_at?: string | null;
    ended_at?: string | null;
};

export type GetExecutionArtifactsResponse = {
    input_artifacts?: {
        [key: string]: ArtifactNodeResponse;
    } | null;
    output_artifacts?: {
        [key: string]: ArtifactNodeResponse;
    } | null;
};

export type GetExecutionInfoResponse = {
    id: string;
    task_spec: TaskSpecOutput;
    parent_execution_id?: string | null;
    pipeline_run_id?: string | null;
    child_task_execution_ids: {
        [key: string]: string;
    };
    input_artifacts?: {
        [key: string]: ArtifactNodeIdResponse;
    } | null;
    output_artifacts?: {
        [key: string]: ArtifactNodeIdResponse;
    } | null;
};

export type GetGraphExecutionStateResponse = {
    child_execution_status_stats: {
        [key: string]: {
            [key: string]: number;
        };
    };
};

export type GraphImplementationInput = {
    graph: GraphSpecInput;
};

export type GraphImplementationOutput = {
    graph: GraphSpecOutput;
};

export type GraphInputArgument = {
    graphInput: GraphInputReference;
};

export type GraphInputReference = {
    inputName: string;
    type?: string | {
        [key: string]: unknown;
    } | Array<unknown> | null;
};

export type GraphSpecInput = {
    tasks: {
        [key: string]: TaskSpecInput;
    };
    outputValues?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
};

export type GraphSpecOutput = {
    tasks: {
        [key: string]: TaskSpecOutput;
    };
    outputValues?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type IfPlaceholderInput = {
    if: IfPlaceholderStructureInput;
};

export type IfPlaceholderOutput = {
    if: IfPlaceholderStructureOutput;
};

export type IfPlaceholderStructureInput = {
    cond: boolean | string | IsPresentPlaceholder | InputValuePlaceholder;
    then: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput>;
    else?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput> | null;
};

export type IfPlaceholderStructureOutput = {
    cond: boolean | string | IsPresentPlaceholder | InputValuePlaceholder;
    then: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput>;
    else?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput> | null;
};

export type InputPathPlaceholder = {
    inputPath: string;
};

export type InputSpec = {
    name: string;
    type?: string | {
        [key: string]: unknown;
    } | Array<unknown> | null;
    description?: string | null;
    default?: string | null;
    optional?: boolean | null;
    annotations?: {
        [key: string]: unknown;
    } | null;
};

export type InputValuePlaceholder = {
    inputValue: string;
};

export type IsPresentPlaceholder = {
    isPresent: string;
};

export type ListPipelineJobsResponse = {
    pipeline_runs: Array<PipelineRunResponse>;
    next_page_token?: string | null;
};

export type MetadataSpec = {
    annotations?: {
        [key: string]: string;
    } | null;
    labels?: {
        [key: string]: string;
    } | null;
};

export type OutputPathPlaceholder = {
    outputPath: string;
};

export type OutputSpec = {
    name: string;
    type?: string | {
        [key: string]: unknown;
    } | Array<unknown> | null;
    description?: string | null;
    annotations?: {
        [key: string]: unknown;
    } | null;
};

export type PipelineRunResponse = {
    id: string;
    root_execution_id: string;
    annotations?: {
        [key: string]: unknown;
    } | null;
    created_by?: string | null;
    created_at?: string | null;
};

export type RetryStrategySpec = {
    maxRetries: number;
};

export type TaskOutputArgument = {
    taskOutput: TaskOutputReference;
};

export type TaskOutputReference = {
    outputName: string;
    taskId: string;
};

export type TaskSpecInput = {
    componentRef: ComponentReferenceInput;
    arguments?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
    isEnabled?: string | GraphInputArgument | TaskOutputArgument | null;
    executionOptions?: ExecutionOptionsSpec | null;
    annotations?: {
        [key: string]: unknown;
    } | null;
};

export type TaskSpecOutput = {
    componentRef: ComponentReferenceOutput;
    arguments?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
    isEnabled?: string | GraphInputArgument | TaskOutputArgument | null;
    executionOptions?: ExecutionOptionsSpec | null;
    annotations?: {
        [key: string]: unknown;
    } | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type GetApiArtifactsIdGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/artifacts/{id}';
};

export type GetApiArtifactsIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiArtifactsIdGetError = GetApiArtifactsIdGetErrors[keyof GetApiArtifactsIdGetErrors];

export type GetApiArtifactsIdGetResponses = {
    /**
     * Successful Response
     */
    200: GetArtifactInfoResponse;
};

export type GetApiArtifactsIdGetResponse = GetApiArtifactsIdGetResponses[keyof GetApiArtifactsIdGetResponses];

export type GetApiExecutionsIdDetailsGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/details';
};

export type GetApiExecutionsIdDetailsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiExecutionsIdDetailsGetError = GetApiExecutionsIdDetailsGetErrors[keyof GetApiExecutionsIdDetailsGetErrors];

export type GetApiExecutionsIdDetailsGetResponses = {
    /**
     * Successful Response
     */
    200: GetExecutionInfoResponse;
};

export type GetApiExecutionsIdDetailsGetResponse = GetApiExecutionsIdDetailsGetResponses[keyof GetApiExecutionsIdDetailsGetResponses];

export type GetGraphExecutionStateApiExecutionsIdStateGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/state';
};

export type GetGraphExecutionStateApiExecutionsIdStateGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGraphExecutionStateApiExecutionsIdStateGetError = GetGraphExecutionStateApiExecutionsIdStateGetErrors[keyof GetGraphExecutionStateApiExecutionsIdStateGetErrors];

export type GetGraphExecutionStateApiExecutionsIdStateGetResponses = {
    /**
     * Successful Response
     */
    200: GetGraphExecutionStateResponse;
};

export type GetGraphExecutionStateApiExecutionsIdStateGetResponse = GetGraphExecutionStateApiExecutionsIdStateGetResponses[keyof GetGraphExecutionStateApiExecutionsIdStateGetResponses];

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/graph_execution_state';
};

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetError = GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors[keyof GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors];

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses = {
    /**
     * Successful Response
     */
    200: GetGraphExecutionStateResponse;
};

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponse = GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses[keyof GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses];

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/container_state';
};

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetError = GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors[keyof GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors];

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses = {
    /**
     * Successful Response
     */
    200: GetContainerExecutionStateResponse;
};

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetResponse = GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses[keyof GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses];

export type GetArtifactsApiExecutionsIdArtifactsGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/artifacts';
};

export type GetArtifactsApiExecutionsIdArtifactsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetArtifactsApiExecutionsIdArtifactsGetError = GetArtifactsApiExecutionsIdArtifactsGetErrors[keyof GetArtifactsApiExecutionsIdArtifactsGetErrors];

export type GetArtifactsApiExecutionsIdArtifactsGetResponses = {
    /**
     * Successful Response
     */
    200: GetExecutionArtifactsResponse;
};

export type GetArtifactsApiExecutionsIdArtifactsGetResponse = GetArtifactsApiExecutionsIdArtifactsGetResponses[keyof GetArtifactsApiExecutionsIdArtifactsGetResponses];

export type GetContainerLogApiExecutionsIdContainerLogGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/container_log';
};

export type GetContainerLogApiExecutionsIdContainerLogGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetContainerLogApiExecutionsIdContainerLogGetError = GetContainerLogApiExecutionsIdContainerLogGetErrors[keyof GetContainerLogApiExecutionsIdContainerLogGetErrors];

export type GetContainerLogApiExecutionsIdContainerLogGetResponses = {
    /**
     * Successful Response
     */
    200: GetContainerExecutionLogResponse;
};

export type GetContainerLogApiExecutionsIdContainerLogGetResponse = GetContainerLogApiExecutionsIdContainerLogGetResponses[keyof GetContainerLogApiExecutionsIdContainerLogGetResponses];

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/stream_container_log';
};

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetError = StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors[keyof StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors];

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListApiPipelineRunsGetData = {
    body?: never;
    path?: never;
    query?: {
        page_token?: string | null;
        filter?: string | null;
    };
    url: '/api/pipeline_runs/';
};

export type ListApiPipelineRunsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListApiPipelineRunsGetError = ListApiPipelineRunsGetErrors[keyof ListApiPipelineRunsGetErrors];

export type ListApiPipelineRunsGetResponses = {
    /**
     * Successful Response
     */
    200: ListPipelineJobsResponse;
};

export type ListApiPipelineRunsGetResponse = ListApiPipelineRunsGetResponses[keyof ListApiPipelineRunsGetResponses];

export type CreateApiPipelineRunsPostData = {
    body: BodyCreateApiPipelineRunsPost;
    path?: never;
    query?: never;
    url: '/api/pipeline_runs/';
};

export type CreateApiPipelineRunsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiPipelineRunsPostError = CreateApiPipelineRunsPostErrors[keyof CreateApiPipelineRunsPostErrors];

export type CreateApiPipelineRunsPostResponses = {
    /**
     * Successful Response
     */
    200: PipelineRunResponse;
};

export type CreateApiPipelineRunsPostResponse = CreateApiPipelineRunsPostResponses[keyof CreateApiPipelineRunsPostResponses];

export type GetApiPipelineRunsIdGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/pipeline_runs/{id}';
};

export type GetApiPipelineRunsIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiPipelineRunsIdGetError = GetApiPipelineRunsIdGetErrors[keyof GetApiPipelineRunsIdGetErrors];

export type GetApiPipelineRunsIdGetResponses = {
    /**
     * Successful Response
     */
    200: PipelineRunResponse;
};

export type GetApiPipelineRunsIdGetResponse = GetApiPipelineRunsIdGetResponses[keyof GetApiPipelineRunsIdGetResponses];

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/artifacts/{id}/signed_artifact_url';
};

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetError = GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors[keyof GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors];

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses = {
    /**
     * Successful Response
     */
    200: GetArtifactSignedUrlResponse;
};

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponse = GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses[keyof GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses];

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutData = {
    body?: never;
    path?: never;
    query: {
        read_only: boolean;
    };
    url: '/api/admin/set_read_only_model';
};

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutError = AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors[keyof AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors];

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutData = {
    body?: never;
    path: {
        id: string;
    };
    query: {
        status: ContainerExecutionStatus;
    };
    url: '/api/admin/execution_node/{id}/status';
};

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutError = AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors[keyof AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors];

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PingServicesPingGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/services/ping';
};

export type PingServicesPingGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserNamesGetUserNamesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/get_user_names';
};

export type GetUserNamesGetUserNamesGetResponses = {
    /**
     * Successful Response
     */
    200: [
        string | null,
        string | null,
        string | null
    ];
};

export type GetUserNamesGetUserNamesGetResponse = GetUserNamesGetUserNamesGetResponses[keyof GetUserNamesGetUserNamesGetResponses];

export type GetRequestHeadersGetRequestHeadersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/get_request_headers';
};

export type GetRequestHeadersGetRequestHeadersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<[
        Blob | File,
        Blob | File
    ]>;
};

export type GetRequestHeadersGetRequestHeadersGetResponse = GetRequestHeadersGetRequestHeadersGetResponses[keyof GetRequestHeadersGetRequestHeadersGetResponses];

export type ReadUrlTestReadUrlGetData = {
    body?: never;
    path?: never;
    query: {
        url: string;
    };
    url: '/test/read_url';
};

export type ReadUrlTestReadUrlGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadUrlTestReadUrlGetError = ReadUrlTestReadUrlGetErrors[keyof ReadUrlTestReadUrlGetErrors];

export type ReadUrlTestReadUrlGetResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type ReadUrlTestReadUrlGetResponse = ReadUrlTestReadUrlGetResponses[keyof ReadUrlTestReadUrlGetResponses];

export type GcsReadGcsReadGetData = {
    body?: never;
    path?: never;
    query?: {
        bucket_name?: string | null;
        path?: string | null;
    };
    url: '/gcs_read';
};

export type GcsReadGcsReadGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GcsReadGcsReadGetError = GcsReadGcsReadGetErrors[keyof GcsReadGcsReadGetErrors];

export type GcsReadGcsReadGetResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type GcsReadGcsReadGetResponse = GcsReadGcsReadGetResponses[keyof GcsReadGcsReadGetResponses];

export type GkeGetClusterConfigGkeGetClusterConfigGetData = {
    body?: never;
    path?: never;
    query?: {
        context?: string | null;
    };
    url: '/gke_get_cluster_config';
};

export type GkeGetClusterConfigGkeGetClusterConfigGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeGetClusterConfigGkeGetClusterConfigGetError = GkeGetClusterConfigGkeGetClusterConfigGetErrors[keyof GkeGetClusterConfigGkeGetClusterConfigGetErrors];

export type GkeGetClusterConfigGkeGetClusterConfigGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type GkeGetClusterConfigGkeGetClusterConfigGetResponse = GkeGetClusterConfigGkeGetClusterConfigGetResponses[keyof GkeGetClusterConfigGkeGetClusterConfigGetResponses];

export type GkeListNamespacesGkeListNamespacesGetData = {
    body?: never;
    path?: never;
    query?: {
        context?: string | null;
    };
    url: '/gke_list_namespaces';
};

export type GkeListNamespacesGkeListNamespacesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeListNamespacesGkeListNamespacesGetError = GkeListNamespacesGkeListNamespacesGetErrors[keyof GkeListNamespacesGkeListNamespacesGetErrors];

export type GkeListNamespacesGkeListNamespacesGetResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GkeListNamespacesGkeListNamespacesGetResponse = GkeListNamespacesGkeListNamespacesGetResponses[keyof GkeListNamespacesGkeListNamespacesGetResponses];

export type GetMysqlUrlGetMysqlUrlGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/get_mysql_url';
};

export type GetMysqlUrlGetMysqlUrlGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type GetMysqlUrlGetMysqlUrlGetResponse = GetMysqlUrlGetMysqlUrlGetResponses[keyof GetMysqlUrlGetMysqlUrlGetResponses];

export type MysqlListTablesMysqlListTablesGetData = {
    body?: never;
    path?: never;
    query?: {
        db_uri?: string | null;
    };
    url: '/mysql_list_tables';
};

export type MysqlListTablesMysqlListTablesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MysqlListTablesMysqlListTablesGetError = MysqlListTablesMysqlListTablesGetErrors[keyof MysqlListTablesMysqlListTablesGetErrors];

export type MysqlListTablesMysqlListTablesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type MysqlListTablesMysqlListTablesGetResponse = MysqlListTablesMysqlListTablesGetResponses[keyof MysqlListTablesMysqlListTablesGetResponses];

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostData = {
    body?: never;
    path?: never;
    query: {
        authorization: string;
    };
    url: '/admin/mysql_recreate_all_tables_dont_run';
};

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostError = MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors[keyof MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors];

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponse = MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses[keyof MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses];

export type VertexListCustomJobsVertexListCustomJobsGetData = {
    body?: never;
    path?: never;
    query?: {
        project?: string | null;
        location?: string | null;
    };
    url: '/vertex_list_custom_jobs';
};

export type VertexListCustomJobsVertexListCustomJobsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VertexListCustomJobsVertexListCustomJobsGetError = VertexListCustomJobsVertexListCustomJobsGetErrors[keyof VertexListCustomJobsVertexListCustomJobsGetErrors];

export type VertexListCustomJobsVertexListCustomJobsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type VertexListCustomJobsVertexListCustomJobsGetResponse = VertexListCustomJobsVertexListCustomJobsGetResponses[keyof VertexListCustomJobsVertexListCustomJobsGetResponses];

export type GkeCreateSimplePodTestGkeCreateSimplePodGetData = {
    body?: never;
    path?: never;
    query?: {
        context?: string | null;
        namespace?: string;
    };
    url: '/test/gke_create_simple_pod';
};

export type GkeCreateSimplePodTestGkeCreateSimplePodGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeCreateSimplePodTestGkeCreateSimplePodGetError = GkeCreateSimplePodTestGkeCreateSimplePodGetErrors[keyof GkeCreateSimplePodTestGkeCreateSimplePodGetErrors];

export type GkeCreateSimplePodTestGkeCreateSimplePodGetResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GkeCreateSimplePodTestGkeCreateSimplePodGetResponse = GkeCreateSimplePodTestGkeCreateSimplePodGetResponses[keyof GkeCreateSimplePodTestGkeCreateSimplePodGetResponses];

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetData = {
    body?: never;
    path?: never;
    query?: {
        context?: string | null;
        namespace?: string;
        gcs_bucket_name?: unknown;
        service_account_name?: string | null;
    };
    url: '/test/gke_create_gcsfuse_pod';
};

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetError = GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors[keyof GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors];

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponse = GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses[keyof GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};