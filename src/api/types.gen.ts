// This file is auto-generated by @hey-api/openapi-ts

/**
 * ArtifactData
 */
export type ArtifactData = {
    /**
     * Total Size
     */
    total_size: number;
    /**
     * Is Dir
     */
    is_dir: boolean;
    /**
     * Hash
     */
    hash: string;
    /**
     * Uri
     */
    uri?: string | null;
    /**
     * Value
     */
    value?: string | null;
    /**
     * Created At
     */
    created_at?: string | null;
    /**
     * Deleted At
     */
    deleted_at?: string | null;
    /**
     * Extra Data
     */
    extra_data?: {
        [key: string]: unknown;
    } | null;
};

/**
 * ArtifactDataResponse
 */
export type ArtifactDataResponse = {
    /**
     * Total Size
     */
    total_size: number;
    /**
     * Is Dir
     */
    is_dir: boolean;
    /**
     * Uri
     */
    uri?: string | null;
    /**
     * Value
     */
    value?: string | null;
};

/**
 * ArtifactNodeIdResponse
 */
export type ArtifactNodeIdResponse = {
    /**
     * Id
     */
    id: string;
};

/**
 * ArtifactNodeResponse
 */
export type ArtifactNodeResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Type Name
     */
    type_name?: string | null;
    /**
     * Type Properties
     */
    type_properties?: {
        [key: string]: unknown;
    } | null;
    /**
     * Producer Execution Id
     */
    producer_execution_id?: string | null;
    /**
     * Producer Output Name
     */
    producer_output_name?: string | null;
    artifact_data?: ArtifactDataResponse | null;
};

/**
 * Body_create_api_pipeline_runs__post
 */
export type BodyCreateApiPipelineRunsPost = {
    root_task: TaskSpecInput;
    /**
     * Components
     */
    components?: Array<ComponentReferenceInput> | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: unknown;
    } | null;
};

/**
 * CachingStrategySpec
 */
export type CachingStrategySpec = {
    /**
     * Maxcachestaleness
     */
    maxCacheStaleness?: string | null;
};

/**
 * ComponentLibrary
 */
export type ComponentLibrary = {
    /**
     * Name
     */
    name: string;
    root_folder: ComponentLibraryFolderInput;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: string;
    } | null;
};

/**
 * ComponentLibraryFolder
 */
export type ComponentLibraryFolderInput = {
    /**
     * Name
     */
    name: string;
    /**
     * Folders
     */
    folders?: Array<ComponentLibraryFolderInput> | null;
    /**
     * Components
     */
    components?: Array<ComponentReferenceInput> | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: string;
    } | null;
};

/**
 * ComponentLibraryFolder
 */
export type ComponentLibraryFolderOutput = {
    /**
     * Name
     */
    name: string;
    /**
     * Folders
     */
    folders?: Array<ComponentLibraryFolderOutput> | null;
    /**
     * Components
     */
    components?: Array<ComponentReferenceOutput> | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: string;
    } | null;
};

/**
 * ComponentLibraryResponse
 */
export type ComponentLibraryResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    root_folder?: ComponentLibraryFolderOutput | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Published By
     */
    published_by?: string | null;
    /**
     * Hide From Search
     */
    hide_from_search?: boolean;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: string;
    } | null;
    /**
     * Component Count
     */
    component_count?: number;
};

/**
 * ComponentReference
 */
export type ComponentReferenceInput = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Digest
     */
    digest?: string | null;
    /**
     * Tag
     */
    tag?: string | null;
    /**
     * Url
     */
    url?: string | null;
    spec?: ComponentSpecInput | null;
    /**
     * Text
     */
    text?: string | null;
};

/**
 * ComponentReference
 */
export type ComponentReferenceOutput = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Digest
     */
    digest?: string | null;
    /**
     * Tag
     */
    tag?: string | null;
    /**
     * Url
     */
    url?: string | null;
    spec?: ComponentSpecOutput | null;
    /**
     * Text
     */
    text?: string | null;
};

/**
 * ComponentResponse
 */
export type ComponentResponse = {
    /**
     * Digest
     */
    digest: string;
    /**
     * Text
     */
    text: string;
};

/**
 * ComponentSpec
 */
export type ComponentSpecInput = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    metadata?: MetadataSpec | null;
    /**
     * Inputs
     */
    inputs?: Array<InputSpec> | null;
    /**
     * Outputs
     */
    outputs?: Array<OutputSpec> | null;
    /**
     * Implementation
     */
    implementation?: ContainerImplementationInput | GraphImplementationInput | null;
};

/**
 * ComponentSpec
 */
export type ComponentSpecOutput = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Description
     */
    description?: string | null;
    metadata?: MetadataSpec | null;
    /**
     * Inputs
     */
    inputs?: Array<InputSpec> | null;
    /**
     * Outputs
     */
    outputs?: Array<OutputSpec> | null;
    /**
     * Implementation
     */
    implementation?: ContainerImplementationOutput | GraphImplementationOutput | null;
};

/**
 * ConcatPlaceholder
 */
export type ConcatPlaceholderInput = {
    /**
     * Concat
     */
    concat: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput>;
};

/**
 * ConcatPlaceholder
 */
export type ConcatPlaceholderOutput = {
    /**
     * Concat
     */
    concat: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput>;
};

/**
 * ContainerExecutionStatus
 */
export type ContainerExecutionStatus = 'INVALID' | 'UNINITIALIZED' | 'QUEUED' | 'WAITING_FOR_UPSTREAM' | 'PENDING' | 'RUNNING' | 'SUCCEEDED' | 'FAILED' | 'SYSTEM_ERROR' | 'CANCELLING' | 'CANCELLED' | 'SKIPPED';

/**
 * ContainerImplementation
 */
export type ContainerImplementationInput = {
    container: ContainerSpecInput;
};

/**
 * ContainerImplementation
 */
export type ContainerImplementationOutput = {
    container: ContainerSpecOutput;
};

/**
 * ContainerSpec
 */
export type ContainerSpecInput = {
    /**
     * Image
     */
    image: string;
    /**
     * Command
     */
    command?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput> | null;
    /**
     * Args
     */
    args?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput> | null;
    /**
     * Env
     */
    env?: {
        [key: string]: string;
    } | null;
};

/**
 * ContainerSpec
 */
export type ContainerSpecOutput = {
    /**
     * Image
     */
    image: string;
    /**
     * Command
     */
    command?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput> | null;
    /**
     * Args
     */
    args?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput> | null;
    /**
     * Env
     */
    env?: {
        [key: string]: string;
    } | null;
};

/**
 * ExecutionOptionsSpec
 */
export type ExecutionOptionsSpec = {
    retryStrategy?: RetryStrategySpec | null;
    cachingStrategy?: CachingStrategySpec | null;
};

/**
 * GetArtifactInfoResponse
 */
export type GetArtifactInfoResponse = {
    /**
     * Id
     */
    id: string;
    artifact_data?: ArtifactData | null;
};

/**
 * GetArtifactSignedUrlResponse
 */
export type GetArtifactSignedUrlResponse = {
    /**
     * Signed Url
     */
    signed_url: string;
};

/**
 * GetContainerExecutionLogResponse
 */
export type GetContainerExecutionLogResponse = {
    /**
     * Log Text
     */
    log_text?: string | null;
    /**
     * System Error Exception Full
     */
    system_error_exception_full?: string | null;
    /**
     * Orchestration Error Message
     */
    orchestration_error_message?: string | null;
};

/**
 * GetContainerExecutionStateResponse
 */
export type GetContainerExecutionStateResponse = {
    status: ContainerExecutionStatus;
    /**
     * Exit Code
     */
    exit_code?: number | null;
    /**
     * Started At
     */
    started_at?: string | null;
    /**
     * Ended At
     */
    ended_at?: string | null;
    /**
     * Debug Info
     */
    debug_info?: {
        [key: string]: unknown;
    } | null;
};

/**
 * GetExecutionArtifactsResponse
 */
export type GetExecutionArtifactsResponse = {
    /**
     * Input Artifacts
     */
    input_artifacts?: {
        [key: string]: ArtifactNodeResponse;
    } | null;
    /**
     * Output Artifacts
     */
    output_artifacts?: {
        [key: string]: ArtifactNodeResponse;
    } | null;
};

/**
 * GetExecutionInfoResponse
 */
export type GetExecutionInfoResponse = {
    /**
     * Id
     */
    id: string;
    task_spec: TaskSpecOutput;
    /**
     * Parent Execution Id
     */
    parent_execution_id?: string | null;
    /**
     * Child Task Execution Ids
     */
    child_task_execution_ids: {
        [key: string]: string;
    };
    /**
     * Pipeline Run Id
     */
    pipeline_run_id?: string | null;
    /**
     * Input Artifacts
     */
    input_artifacts?: {
        [key: string]: ArtifactNodeIdResponse;
    } | null;
    /**
     * Output Artifacts
     */
    output_artifacts?: {
        [key: string]: ArtifactNodeIdResponse;
    } | null;
};

/**
 * GetGraphExecutionStateResponse
 */
export type GetGraphExecutionStateResponse = {
    /**
     * Child Execution Status Stats
     */
    child_execution_status_stats: {
        [key: string]: {
            [key: string]: number;
        };
    };
};

/**
 * GetUserResponse
 */
export type GetUserResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Permissions
     */
    permissions: Array<string>;
};

/**
 * GraphImplementation
 */
export type GraphImplementationInput = {
    graph: GraphSpecInput;
};

/**
 * GraphImplementation
 */
export type GraphImplementationOutput = {
    graph: GraphSpecOutput;
};

/**
 * GraphInputArgument
 */
export type GraphInputArgument = {
    graphInput: GraphInputReference;
};

/**
 * GraphInputReference
 */
export type GraphInputReference = {
    /**
     * Inputname
     */
    inputName: string;
    /**
     * Type
     */
    type?: string | {
        [key: string]: unknown;
    } | Array<unknown> | null;
};

/**
 * GraphSpec
 */
export type GraphSpecInput = {
    /**
     * Tasks
     */
    tasks: {
        [key: string]: TaskSpecInput;
    };
    /**
     * Outputvalues
     */
    outputValues?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
};

/**
 * GraphSpec
 */
export type GraphSpecOutput = {
    /**
     * Tasks
     */
    tasks: {
        [key: string]: TaskSpecOutput;
    };
    /**
     * Outputvalues
     */
    outputValues?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * IfPlaceholder
 */
export type IfPlaceholderInput = {
    if: IfPlaceholderStructureInput;
};

/**
 * IfPlaceholder
 */
export type IfPlaceholderOutput = {
    if: IfPlaceholderStructureOutput;
};

/**
 * IfPlaceholderStructure
 */
export type IfPlaceholderStructureInput = {
    /**
     * Cond
     */
    cond: boolean | string | IsPresentPlaceholder | InputValuePlaceholder;
    /**
     * Then
     */
    then: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput>;
    /**
     * Else
     */
    else?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderInput | IfPlaceholderInput> | null;
};

/**
 * IfPlaceholderStructure
 */
export type IfPlaceholderStructureOutput = {
    /**
     * Cond
     */
    cond: boolean | string | IsPresentPlaceholder | InputValuePlaceholder;
    /**
     * Then
     */
    then: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput>;
    /**
     * Else
     */
    else?: Array<string | InputValuePlaceholder | InputPathPlaceholder | OutputPathPlaceholder | ConcatPlaceholderOutput | IfPlaceholderOutput> | null;
};

/**
 * InputPathPlaceholder
 */
export type InputPathPlaceholder = {
    /**
     * Inputpath
     */
    inputPath: string;
};

/**
 * InputSpec
 */
export type InputSpec = {
    /**
     * Name
     */
    name: string;
    /**
     * Type
     */
    type?: string | {
        [key: string]: unknown;
    } | Array<unknown> | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Default
     */
    default?: string | null;
    /**
     * Optional
     */
    optional?: boolean | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: unknown;
    } | null;
};

/**
 * InputValuePlaceholder
 */
export type InputValuePlaceholder = {
    /**
     * Inputvalue
     */
    inputValue: string;
};

/**
 * IsPresentPlaceholder
 */
export type IsPresentPlaceholder = {
    /**
     * Ispresent
     */
    isPresent: string;
};

/**
 * ListComponentLibrariesResponse
 */
export type ListComponentLibrariesResponse = {
    /**
     * Component Libraries
     */
    component_libraries: Array<ComponentLibraryResponse>;
};

/**
 * ListPipelineJobsResponse
 */
export type ListPipelineJobsResponse = {
    /**
     * Pipeline Runs
     */
    pipeline_runs: Array<PipelineRunResponse>;
    /**
     * Next Page Token
     */
    next_page_token?: string | null;
};

/**
 * ListPublishedComponentsResponse
 */
export type ListPublishedComponentsResponse = {
    /**
     * Published Components
     */
    published_components: Array<PublishedComponentResponse>;
};

/**
 * MetadataSpec
 */
export type MetadataSpec = {
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: string;
    } | null;
    /**
     * Labels
     */
    labels?: {
        [key: string]: string;
    } | null;
};

/**
 * OutputPathPlaceholder
 */
export type OutputPathPlaceholder = {
    /**
     * Outputpath
     */
    outputPath: string;
};

/**
 * OutputSpec
 */
export type OutputSpec = {
    /**
     * Name
     */
    name: string;
    /**
     * Type
     */
    type?: string | {
        [key: string]: unknown;
    } | Array<unknown> | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: unknown;
    } | null;
};

/**
 * PipelineRunResponse
 */
export type PipelineRunResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Root Execution Id
     */
    root_execution_id: string;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: unknown;
    } | null;
    /**
     * Created By
     */
    created_by?: string | null;
    /**
     * Created At
     */
    created_at?: string | null;
    /**
     * Pipeline Name
     */
    pipeline_name?: string | null;
    /**
     * Execution Status Stats
     */
    execution_status_stats?: {
        [key: string]: number;
    } | null;
};

/**
 * PublishedComponentResponse
 */
export type PublishedComponentResponse = {
    /**
     * Digest
     */
    digest: string;
    /**
     * Published By
     */
    published_by: string;
    /**
     * Deprecated
     */
    deprecated?: boolean;
    /**
     * Superseded By
     */
    superseded_by?: string | null;
    /**
     * Url
     */
    url?: string | null;
    /**
     * Name
     */
    name?: string | null;
};

/**
 * RetryStrategySpec
 */
export type RetryStrategySpec = {
    /**
     * Maxretries
     */
    maxRetries: number;
};

/**
 * TaskOutputArgument
 */
export type TaskOutputArgument = {
    taskOutput: TaskOutputReference;
};

/**
 * TaskOutputReference
 */
export type TaskOutputReference = {
    /**
     * Outputname
     */
    outputName: string;
    /**
     * Taskid
     */
    taskId: string;
};

/**
 * TaskSpec
 */
export type TaskSpecInput = {
    componentRef: ComponentReferenceInput;
    /**
     * Arguments
     */
    arguments?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
    /**
     * Isenabled
     */
    isEnabled?: string | GraphInputArgument | TaskOutputArgument | null;
    executionOptions?: ExecutionOptionsSpec | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: unknown;
    } | null;
};

/**
 * TaskSpec
 */
export type TaskSpecOutput = {
    componentRef: ComponentReferenceOutput;
    /**
     * Arguments
     */
    arguments?: {
        [key: string]: string | GraphInputArgument | TaskOutputArgument;
    } | null;
    /**
     * Isenabled
     */
    isEnabled?: string | GraphInputArgument | TaskOutputArgument | null;
    executionOptions?: ExecutionOptionsSpec | null;
    /**
     * Annotations
     */
    annotations?: {
        [key: string]: unknown;
    } | null;
};

/**
 * UserComponentLibraryPinsResponse
 */
export type UserComponentLibraryPinsResponse = {
    /**
     * Component Library Ids
     */
    component_library_ids: Array<string>;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetApiArtifactsIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/artifacts/{id}';
};

export type GetApiArtifactsIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiArtifactsIdGetError = GetApiArtifactsIdGetErrors[keyof GetApiArtifactsIdGetErrors];

export type GetApiArtifactsIdGetResponses = {
    /**
     * Successful Response
     */
    200: GetArtifactInfoResponse;
};

export type GetApiArtifactsIdGetResponse = GetApiArtifactsIdGetResponses[keyof GetApiArtifactsIdGetResponses];

export type GetApiExecutionsIdDetailsGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/details';
};

export type GetApiExecutionsIdDetailsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiExecutionsIdDetailsGetError = GetApiExecutionsIdDetailsGetErrors[keyof GetApiExecutionsIdDetailsGetErrors];

export type GetApiExecutionsIdDetailsGetResponses = {
    /**
     * Successful Response
     */
    200: GetExecutionInfoResponse;
};

export type GetApiExecutionsIdDetailsGetResponse = GetApiExecutionsIdDetailsGetResponses[keyof GetApiExecutionsIdDetailsGetResponses];

export type GetGraphExecutionStateApiExecutionsIdStateGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/state';
};

export type GetGraphExecutionStateApiExecutionsIdStateGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGraphExecutionStateApiExecutionsIdStateGetError = GetGraphExecutionStateApiExecutionsIdStateGetErrors[keyof GetGraphExecutionStateApiExecutionsIdStateGetErrors];

export type GetGraphExecutionStateApiExecutionsIdStateGetResponses = {
    /**
     * Successful Response
     */
    200: GetGraphExecutionStateResponse;
};

export type GetGraphExecutionStateApiExecutionsIdStateGetResponse = GetGraphExecutionStateApiExecutionsIdStateGetResponses[keyof GetGraphExecutionStateApiExecutionsIdStateGetResponses];

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/graph_execution_state';
};

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetError = GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors[keyof GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetErrors];

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses = {
    /**
     * Successful Response
     */
    200: GetGraphExecutionStateResponse;
};

export type GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponse = GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses[keyof GetGraphExecutionStateApiExecutionsIdGraphExecutionStateGetResponses];

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/container_state';
};

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetError = GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors[keyof GetContainerExecutionStateApiExecutionsIdContainerStateGetErrors];

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses = {
    /**
     * Successful Response
     */
    200: GetContainerExecutionStateResponse;
};

export type GetContainerExecutionStateApiExecutionsIdContainerStateGetResponse = GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses[keyof GetContainerExecutionStateApiExecutionsIdContainerStateGetResponses];

export type GetArtifactsApiExecutionsIdArtifactsGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/artifacts';
};

export type GetArtifactsApiExecutionsIdArtifactsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetArtifactsApiExecutionsIdArtifactsGetError = GetArtifactsApiExecutionsIdArtifactsGetErrors[keyof GetArtifactsApiExecutionsIdArtifactsGetErrors];

export type GetArtifactsApiExecutionsIdArtifactsGetResponses = {
    /**
     * Successful Response
     */
    200: GetExecutionArtifactsResponse;
};

export type GetArtifactsApiExecutionsIdArtifactsGetResponse = GetArtifactsApiExecutionsIdArtifactsGetResponses[keyof GetArtifactsApiExecutionsIdArtifactsGetResponses];

export type GetContainerLogApiExecutionsIdContainerLogGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/container_log';
};

export type GetContainerLogApiExecutionsIdContainerLogGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetContainerLogApiExecutionsIdContainerLogGetError = GetContainerLogApiExecutionsIdContainerLogGetErrors[keyof GetContainerLogApiExecutionsIdContainerLogGetErrors];

export type GetContainerLogApiExecutionsIdContainerLogGetResponses = {
    /**
     * Successful Response
     */
    200: GetContainerExecutionLogResponse;
};

export type GetContainerLogApiExecutionsIdContainerLogGetResponse = GetContainerLogApiExecutionsIdContainerLogGetResponses[keyof GetContainerLogApiExecutionsIdContainerLogGetResponses];

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/executions/{id}/stream_container_log';
};

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetError = StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors[keyof StreamContainerLogApiExecutionsIdStreamContainerLogGetErrors];

export type StreamContainerLogApiExecutionsIdStreamContainerLogGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListApiPipelineRunsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Page Token
         */
        page_token?: string | null;
        /**
         * Filter
         */
        filter?: string | null;
        /**
         * Include Pipeline Names
         */
        include_pipeline_names?: boolean;
        /**
         * Include Execution Stats
         */
        include_execution_stats?: boolean;
    };
    url: '/api/pipeline_runs/';
};

export type ListApiPipelineRunsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListApiPipelineRunsGetError = ListApiPipelineRunsGetErrors[keyof ListApiPipelineRunsGetErrors];

export type ListApiPipelineRunsGetResponses = {
    /**
     * Successful Response
     */
    200: ListPipelineJobsResponse;
};

export type ListApiPipelineRunsGetResponse = ListApiPipelineRunsGetResponses[keyof ListApiPipelineRunsGetResponses];

export type CreateApiPipelineRunsPostData = {
    body: BodyCreateApiPipelineRunsPost;
    path?: never;
    query?: never;
    url: '/api/pipeline_runs/';
};

export type CreateApiPipelineRunsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiPipelineRunsPostError = CreateApiPipelineRunsPostErrors[keyof CreateApiPipelineRunsPostErrors];

export type CreateApiPipelineRunsPostResponses = {
    /**
     * Successful Response
     */
    200: PipelineRunResponse;
};

export type CreateApiPipelineRunsPostResponse = CreateApiPipelineRunsPostResponses[keyof CreateApiPipelineRunsPostResponses];

export type GetApiPipelineRunsIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/pipeline_runs/{id}';
};

export type GetApiPipelineRunsIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiPipelineRunsIdGetError = GetApiPipelineRunsIdGetErrors[keyof GetApiPipelineRunsIdGetErrors];

export type GetApiPipelineRunsIdGetResponses = {
    /**
     * Successful Response
     */
    200: PipelineRunResponse;
};

export type GetApiPipelineRunsIdGetResponse = GetApiPipelineRunsIdGetResponses[keyof GetApiPipelineRunsIdGetResponses];

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/artifacts/{id}/signed_artifact_url';
};

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetError = GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors[keyof GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetErrors];

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses = {
    /**
     * Successful Response
     */
    200: GetArtifactSignedUrlResponse;
};

export type GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponse = GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses[keyof GetSignedArtifactUrlApiArtifactsIdSignedArtifactUrlGetResponses];

export type PipelineRunCancelApiPipelineRunsIdCancelPostData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/pipeline_runs/{id}/cancel';
};

export type PipelineRunCancelApiPipelineRunsIdCancelPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PipelineRunCancelApiPipelineRunsIdCancelPostError = PipelineRunCancelApiPipelineRunsIdCancelPostErrors[keyof PipelineRunCancelApiPipelineRunsIdCancelPostErrors];

export type PipelineRunCancelApiPipelineRunsIdCancelPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListAnnotationsApiPipelineRunsIdAnnotationsGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/pipeline_runs/{id}/annotations/';
};

export type ListAnnotationsApiPipelineRunsIdAnnotationsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListAnnotationsApiPipelineRunsIdAnnotationsGetError = ListAnnotationsApiPipelineRunsIdAnnotationsGetErrors[keyof ListAnnotationsApiPipelineRunsIdAnnotationsGetErrors];

export type ListAnnotationsApiPipelineRunsIdAnnotationsGetResponses = {
    /**
     * Response List Annotations Api Pipeline Runs  Id  Annotations  Get
     * Successful Response
     */
    200: {
        [key: string]: string | null;
    };
};

export type ListAnnotationsApiPipelineRunsIdAnnotationsGetResponse = ListAnnotationsApiPipelineRunsIdAnnotationsGetResponses[keyof ListAnnotationsApiPipelineRunsIdAnnotationsGetResponses];

export type DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
        /**
         * Key
         */
        key: string;
    };
    query?: never;
    url: '/api/pipeline_runs/{id}/annotations/{key}';
};

export type DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteError = DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteErrors[keyof DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteErrors];

export type DeleteAnnotationApiPipelineRunsIdAnnotationsKeyDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type SetAnnotationApiPipelineRunsIdAnnotationsKeyPutData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
        /**
         * Key
         */
        key: string;
    };
    query?: {
        /**
         * Value
         */
        value?: string | null;
    };
    url: '/api/pipeline_runs/{id}/annotations/{key}';
};

export type SetAnnotationApiPipelineRunsIdAnnotationsKeyPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SetAnnotationApiPipelineRunsIdAnnotationsKeyPutError = SetAnnotationApiPipelineRunsIdAnnotationsKeyPutErrors[keyof SetAnnotationApiPipelineRunsIdAnnotationsKeyPutErrors];

export type SetAnnotationApiPipelineRunsIdAnnotationsKeyPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCurrentUserApiUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/me';
};

export type GetCurrentUserApiUsersMeGetResponses = {
    /**
     * Response Get Current User Api Users Me Get
     * Successful Response
     */
    200: GetUserResponse | null;
};

export type GetCurrentUserApiUsersMeGetResponse = GetCurrentUserApiUsersMeGetResponses[keyof GetCurrentUserApiUsersMeGetResponses];

export type GetApiComponentsDigestGetData = {
    body?: never;
    path: {
        /**
         * Digest
         */
        digest: string;
    };
    query?: never;
    url: '/api/components/{digest}';
};

export type GetApiComponentsDigestGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiComponentsDigestGetError = GetApiComponentsDigestGetErrors[keyof GetApiComponentsDigestGetErrors];

export type GetApiComponentsDigestGetResponses = {
    /**
     * Successful Response
     */
    200: ComponentResponse;
};

export type GetApiComponentsDigestGetResponse = GetApiComponentsDigestGetResponses[keyof GetApiComponentsDigestGetResponses];

export type ListApiPublishedComponentsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Include Deprecated
         */
        include_deprecated?: boolean;
        /**
         * Name Substring
         */
        name_substring?: string | null;
        /**
         * Published By Substring
         */
        published_by_substring?: string | null;
        /**
         * Digest
         */
        digest?: string | null;
    };
    url: '/api/published_components/';
};

export type ListApiPublishedComponentsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListApiPublishedComponentsGetError = ListApiPublishedComponentsGetErrors[keyof ListApiPublishedComponentsGetErrors];

export type ListApiPublishedComponentsGetResponses = {
    /**
     * Successful Response
     */
    200: ListPublishedComponentsResponse;
};

export type ListApiPublishedComponentsGetResponse = ListApiPublishedComponentsGetResponses[keyof ListApiPublishedComponentsGetResponses];

export type PublishApiPublishedComponentsPostData = {
    body: ComponentReferenceInput;
    path?: never;
    query?: never;
    url: '/api/published_components/';
};

export type PublishApiPublishedComponentsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PublishApiPublishedComponentsPostError = PublishApiPublishedComponentsPostErrors[keyof PublishApiPublishedComponentsPostErrors];

export type PublishApiPublishedComponentsPostResponses = {
    /**
     * Successful Response
     */
    200: PublishedComponentResponse;
};

export type PublishApiPublishedComponentsPostResponse = PublishApiPublishedComponentsPostResponses[keyof PublishApiPublishedComponentsPostResponses];

export type UpdateApiPublishedComponentsDigestPutData = {
    body?: never;
    path: {
        /**
         * Digest
         */
        digest: string;
    };
    query?: {
        /**
         * Deprecated
         */
        deprecated?: boolean | null;
        /**
         * Superseded By
         */
        superseded_by?: string | null;
    };
    url: '/api/published_components/{digest}';
};

export type UpdateApiPublishedComponentsDigestPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateApiPublishedComponentsDigestPutError = UpdateApiPublishedComponentsDigestPutErrors[keyof UpdateApiPublishedComponentsDigestPutErrors];

export type UpdateApiPublishedComponentsDigestPutResponses = {
    /**
     * Successful Response
     */
    200: PublishedComponentResponse;
};

export type UpdateApiPublishedComponentsDigestPutResponse = UpdateApiPublishedComponentsDigestPutResponses[keyof UpdateApiPublishedComponentsDigestPutResponses];

export type ListApiComponentLibrariesGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Name Substring
         */
        name_substring?: string | null;
    };
    url: '/api/component_libraries/';
};

export type ListApiComponentLibrariesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListApiComponentLibrariesGetError = ListApiComponentLibrariesGetErrors[keyof ListApiComponentLibrariesGetErrors];

export type ListApiComponentLibrariesGetResponses = {
    /**
     * Successful Response
     */
    200: ListComponentLibrariesResponse;
};

export type ListApiComponentLibrariesGetResponse = ListApiComponentLibrariesGetResponses[keyof ListApiComponentLibrariesGetResponses];

export type CreateApiComponentLibrariesPostData = {
    body: ComponentLibrary;
    path?: never;
    query?: {
        /**
         * Hide From Search
         */
        hide_from_search?: boolean;
    };
    url: '/api/component_libraries/';
};

export type CreateApiComponentLibrariesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiComponentLibrariesPostError = CreateApiComponentLibrariesPostErrors[keyof CreateApiComponentLibrariesPostErrors];

export type CreateApiComponentLibrariesPostResponses = {
    /**
     * Successful Response
     */
    200: ComponentLibraryResponse;
};

export type CreateApiComponentLibrariesPostResponse = CreateApiComponentLibrariesPostResponses[keyof CreateApiComponentLibrariesPostResponses];

export type GetApiComponentLibrariesIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: {
        /**
         * Include Component Texts
         */
        include_component_texts?: boolean;
    };
    url: '/api/component_libraries/{id}';
};

export type GetApiComponentLibrariesIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiComponentLibrariesIdGetError = GetApiComponentLibrariesIdGetErrors[keyof GetApiComponentLibrariesIdGetErrors];

export type GetApiComponentLibrariesIdGetResponses = {
    /**
     * Successful Response
     */
    200: ComponentLibraryResponse;
};

export type GetApiComponentLibrariesIdGetResponse = GetApiComponentLibrariesIdGetResponses[keyof GetApiComponentLibrariesIdGetResponses];

export type ReplaceApiComponentLibrariesIdPutData = {
    body: ComponentLibrary;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: {
        /**
         * Hide From Search
         */
        hide_from_search?: boolean | null;
    };
    url: '/api/component_libraries/{id}';
};

export type ReplaceApiComponentLibrariesIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReplaceApiComponentLibrariesIdPutError = ReplaceApiComponentLibrariesIdPutErrors[keyof ReplaceApiComponentLibrariesIdPutErrors];

export type ReplaceApiComponentLibrariesIdPutResponses = {
    /**
     * Successful Response
     */
    200: ComponentLibraryResponse;
};

export type ReplaceApiComponentLibrariesIdPutResponse = ReplaceApiComponentLibrariesIdPutResponses[keyof ReplaceApiComponentLibrariesIdPutResponses];

export type GetComponentLibraryPinsApiComponentLibraryPinsMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/component_library_pins/me/';
};

export type GetComponentLibraryPinsApiComponentLibraryPinsMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserComponentLibraryPinsResponse;
};

export type GetComponentLibraryPinsApiComponentLibraryPinsMeGetResponse = GetComponentLibraryPinsApiComponentLibraryPinsMeGetResponses[keyof GetComponentLibraryPinsApiComponentLibraryPinsMeGetResponses];

export type SetComponentLibraryPinsApiComponentLibraryPinsMePutData = {
    /**
     * Component Library Ids
     */
    body: Array<string>;
    path?: never;
    query?: never;
    url: '/api/component_library_pins/me/';
};

export type SetComponentLibraryPinsApiComponentLibraryPinsMePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SetComponentLibraryPinsApiComponentLibraryPinsMePutError = SetComponentLibraryPinsApiComponentLibraryPinsMePutErrors[keyof SetComponentLibraryPinsApiComponentLibraryPinsMePutErrors];

export type SetComponentLibraryPinsApiComponentLibraryPinsMePutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Read Only
         */
        read_only: boolean;
    };
    url: '/api/admin/set_read_only_model';
};

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutError = AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors[keyof AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutErrors];

export type AdminSetReadOnlyModelApiAdminSetReadOnlyModelPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query: {
        status: ContainerExecutionStatus;
    };
    url: '/api/admin/execution_node/{id}/status';
};

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutError = AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors[keyof AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutErrors];

export type AdminSetExecutionNodeStatusApiAdminExecutionNodeIdStatusPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/admin/sql_engine_connection_pool_status';
};

export type GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetResponses = {
    /**
     * Response Get Sql Engine Connection Pool Status Api Admin Sql Engine Connection Pool Status Get
     * Successful Response
     */
    200: string;
};

export type GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetResponse = GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetResponses[keyof GetSqlEngineConnectionPoolStatusApiAdminSqlEngineConnectionPoolStatusGetResponses];

export type PingServicesPingGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/services/ping';
};

export type PingServicesPingGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserNamesGetUserNamesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/get_user_names';
};

export type GetUserNamesGetUserNamesGetResponses = {
    /**
     * Response Get User Names Get User Names Get
     * Successful Response
     */
    200: [
        string | null,
        string | null,
        string | null,
        string | null
    ];
};

export type GetUserNamesGetUserNamesGetResponse = GetUserNamesGetUserNamesGetResponses[keyof GetUserNamesGetUserNamesGetResponses];

export type TestGetUserDetailsApiTestGetUserDetailsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/test/get_user_details';
};

export type TestGetUserDetailsApiTestGetUserDetailsGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetRequestHeadersApiTestGetRequestHeadersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/test/get_request_headers';
};

export type GetRequestHeadersApiTestGetRequestHeadersGetResponses = {
    /**
     * Response Get Request Headers Api Test Get Request Headers Get
     * Successful Response
     */
    200: Array<[
        Blob | File,
        Blob | File
    ]>;
};

export type GetRequestHeadersApiTestGetRequestHeadersGetResponse = GetRequestHeadersApiTestGetRequestHeadersGetResponses[keyof GetRequestHeadersApiTestGetRequestHeadersGetResponses];

export type ReadUrlTestReadUrlGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Url
         */
        url: string;
    };
    url: '/test/read_url';
};

export type ReadUrlTestReadUrlGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadUrlTestReadUrlGetError = ReadUrlTestReadUrlGetErrors[keyof ReadUrlTestReadUrlGetErrors];

export type ReadUrlTestReadUrlGetResponses = {
    /**
     * Response Read Url Test Read Url Get
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type ReadUrlTestReadUrlGetResponse = ReadUrlTestReadUrlGetResponses[keyof ReadUrlTestReadUrlGetResponses];

export type GcsReadGcsReadGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Bucket Name
         */
        bucket_name?: string | null;
        /**
         * Path
         */
        path?: string | null;
    };
    url: '/gcs_read';
};

export type GcsReadGcsReadGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GcsReadGcsReadGetError = GcsReadGcsReadGetErrors[keyof GcsReadGcsReadGetErrors];

export type GcsReadGcsReadGetResponses = {
    /**
     * Response Gcs Read Gcs Read Get
     * Successful Response
     */
    200: Array<string>;
};

export type GcsReadGcsReadGetResponse = GcsReadGcsReadGetResponses[keyof GcsReadGcsReadGetResponses];

export type GkeGetClusterConfigGkeGetClusterConfigGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Context
         */
        context?: string | null;
    };
    url: '/gke_get_cluster_config';
};

export type GkeGetClusterConfigGkeGetClusterConfigGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeGetClusterConfigGkeGetClusterConfigGetError = GkeGetClusterConfigGkeGetClusterConfigGetErrors[keyof GkeGetClusterConfigGkeGetClusterConfigGetErrors];

export type GkeGetClusterConfigGkeGetClusterConfigGetResponses = {
    /**
     * Response Gke Get Cluster Config Gke Get Cluster Config Get
     * Successful Response
     */
    200: string;
};

export type GkeGetClusterConfigGkeGetClusterConfigGetResponse = GkeGetClusterConfigGkeGetClusterConfigGetResponses[keyof GkeGetClusterConfigGkeGetClusterConfigGetResponses];

export type GkeListNamespacesGkeListNamespacesGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Context
         */
        context?: string | null;
    };
    url: '/gke_list_namespaces';
};

export type GkeListNamespacesGkeListNamespacesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeListNamespacesGkeListNamespacesGetError = GkeListNamespacesGkeListNamespacesGetErrors[keyof GkeListNamespacesGkeListNamespacesGetErrors];

export type GkeListNamespacesGkeListNamespacesGetResponses = {
    /**
     * Response Gke List Namespaces Gke List Namespaces Get
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GkeListNamespacesGkeListNamespacesGetResponse = GkeListNamespacesGkeListNamespacesGetResponses[keyof GkeListNamespacesGkeListNamespacesGetResponses];

export type GetMysqlUrlGetMysqlUrlGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/get_mysql_url';
};

export type GetMysqlUrlGetMysqlUrlGetResponses = {
    /**
     * Response Get Mysql Url Get Mysql Url Get
     * Successful Response
     */
    200: string;
};

export type GetMysqlUrlGetMysqlUrlGetResponse = GetMysqlUrlGetMysqlUrlGetResponses[keyof GetMysqlUrlGetMysqlUrlGetResponses];

export type MysqlListTablesMysqlListTablesGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Db Uri
         */
        db_uri?: string | null;
    };
    url: '/mysql_list_tables';
};

export type MysqlListTablesMysqlListTablesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MysqlListTablesMysqlListTablesGetError = MysqlListTablesMysqlListTablesGetErrors[keyof MysqlListTablesMysqlListTablesGetErrors];

export type MysqlListTablesMysqlListTablesGetResponses = {
    /**
     * Response Mysql List Tables Mysql List Tables Get
     * Successful Response
     */
    200: Array<string>;
};

export type MysqlListTablesMysqlListTablesGetResponse = MysqlListTablesMysqlListTablesGetResponses[keyof MysqlListTablesMysqlListTablesGetResponses];

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Authorization
         */
        authorization: string;
    };
    url: '/admin/mysql_recreate_all_tables_dont_run';
};

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostError = MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors[keyof MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostErrors];

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses = {
    /**
     * Response Mysql Recreate All Tables Dont Run Admin Mysql Recreate All Tables Dont Run Post
     * Successful Response
     */
    200: Array<string>;
};

export type MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponse = MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses[keyof MysqlRecreateAllTablesDontRunAdminMysqlRecreateAllTablesDontRunPostResponses];

export type VertexListCustomJobsVertexListCustomJobsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Project
         */
        project?: string | null;
        /**
         * Location
         */
        location?: string | null;
    };
    url: '/vertex_list_custom_jobs';
};

export type VertexListCustomJobsVertexListCustomJobsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VertexListCustomJobsVertexListCustomJobsGetError = VertexListCustomJobsVertexListCustomJobsGetErrors[keyof VertexListCustomJobsVertexListCustomJobsGetErrors];

export type VertexListCustomJobsVertexListCustomJobsGetResponses = {
    /**
     * Response Vertex List Custom Jobs Vertex List Custom Jobs Get
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type VertexListCustomJobsVertexListCustomJobsGetResponse = VertexListCustomJobsVertexListCustomJobsGetResponses[keyof VertexListCustomJobsVertexListCustomJobsGetResponses];

export type GkeCreateSimplePodTestGkeCreateSimplePodGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Context
         */
        context?: string | null;
        /**
         * Namespace
         */
        namespace?: string;
    };
    url: '/test/gke_create_simple_pod';
};

export type GkeCreateSimplePodTestGkeCreateSimplePodGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeCreateSimplePodTestGkeCreateSimplePodGetError = GkeCreateSimplePodTestGkeCreateSimplePodGetErrors[keyof GkeCreateSimplePodTestGkeCreateSimplePodGetErrors];

export type GkeCreateSimplePodTestGkeCreateSimplePodGetResponses = {
    /**
     * Response Gke Create Simple Pod Test Gke Create Simple Pod Get
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GkeCreateSimplePodTestGkeCreateSimplePodGetResponse = GkeCreateSimplePodTestGkeCreateSimplePodGetResponses[keyof GkeCreateSimplePodTestGkeCreateSimplePodGetResponses];

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Context
         */
        context?: string | null;
        /**
         * Namespace
         */
        namespace?: string;
        /**
         * Gcs Bucket Name
         */
        gcs_bucket_name?: unknown;
        /**
         * Service Account Name
         */
        service_account_name?: string | null;
    };
    url: '/test/gke_create_gcsfuse_pod';
};

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetError = GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors[keyof GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetErrors];

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses = {
    /**
     * Response Gke Create Gcsfuse Pod Test Gke Create Gcsfuse Pod Get
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponse = GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses[keyof GkeCreateGcsfusePodTestGkeCreateGcsfusePodGetResponses];

export type QuickStatsApiStatsQuickGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Format
         * Response format: 'html' or 'json'
         */
        format?: string;
    };
    url: '/api/stats/quick';
};

export type QuickStatsApiStatsQuickGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type QuickStatsApiStatsQuickGetError = QuickStatsApiStatsQuickGetErrors[keyof QuickStatsApiStatsQuickGetErrors];

export type QuickStatsApiStatsQuickGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};